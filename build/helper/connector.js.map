{"version":3,"sources":["../../src/helper/connector.js"],"names":["HTTPClient","defaults","headers","getKongInfomation","adminURL","method","baseURL","retrieveConsumer","consumerId","url","createConsumer","data","username","createOauthCredential","name","redirect_uris","getAccessToken","params","provisionKey","scope","join","grant_type","grantType","authenticated_userid","authenticatedUserId","provision_key","password","response_type","auth","clientId","clientSecret"],"mappings":";;;;;;;;;AAAA;;AAEAA,kBAAWC,QAAX,CAAoBC,OAApB,CAA4B,cAA5B,IAA8C,kBAA9C;;AAEO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,QAAQ;AAAA,SACvC,uBAAW;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,OAAO,EAAEF;AAFA,GAAX,CADuC;AAAA,CAAlC;;;;AAMA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,QAAD,EAAWI,UAAX;AAAA,SAC9B,uBAAW;AACTH,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,OAAO,EAAEF,QAFA;AAGTK,IAAAA,GAAG,uBAAgBD,UAAhB;AAHM,GAAX,CAD8B;AAAA,CAAzB;;;;AAOA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACN,QAAD,EAAWI,UAAX;AAAA,SAC5B,uBAAW;AACTH,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAEF,QAFA;AAGTK,IAAAA,GAAG,EAAE,YAHI;AAITE,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAEJ;AADN;AAJG,GAAX,CAD4B;AAAA,CAAvB;;;;AAUA,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CACnCT,QADmC,EAEnCI,UAFmC,EAGnCM,IAHmC,EAInCC,aAJmC;AAAA,SAMnC,uBAAW;AACTV,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAEF,QAFA;AAGTK,IAAAA,GAAG,uBAAgBD,UAAhB,YAHM;AAITG,IAAAA,IAAI,EAAE;AACJG,MAAAA,IAAI,EAAJA,IADI;AAEJC,MAAAA,aAAa,EAAbA;AAFI;AAJG,GAAX,CANmC;AAAA,CAA9B;;;;AAgBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACV,OAAD,EAAUW,MAAV,EAAkBC,YAAlB,EAAmC;AAC/D,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAP,CAAaC,IAAb,CAAkB,GAAlB,CAAd;AACA,MAAIT,IAAI,GAAG;AACTU,IAAAA,UAAU,EAAEJ,MAAM,CAACK,SADV;AAETH,IAAAA,KAAK,EAALA,KAFS;AAGTI,IAAAA,oBAAoB,EAAEN,MAAM,CAACO,mBAHpB;AAITC,IAAAA,aAAa,EAAEP;AAJN,GAAX;;AAMA,UAAQD,MAAM,CAACK,SAAf;AACE,SAAK,UAAL;AAAiB;AACf;AAAEX,QAAAA,IAAI,CAACC,QAAL,GAAgBK,MAAM,CAACL,QAAxB,EAAoCD,IAAI,CAACe,QAAL,GAAgBT,MAAM,CAACS,QAA3D;AACD;AACD;;AACD,SAAK,oBAAL;AAA2B;AACzBf,QAAAA,IAAI,CAACgB,aAAL,GAAqB,kBAArB;AACD;AAPH;;AASA,SAAO,uBAAW;AAChBtB,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAPA,OAFgB;AAGhBG,IAAAA,GAAG,EAAC,oBAHY;AAIhBmB,IAAAA,IAAI,EAAE;AACJhB,MAAAA,QAAQ,EAAEK,MAAM,CAACY,QADb;AAEJH,MAAAA,QAAQ,EAAET,MAAM,CAACa;AAFb,KAJU;AAQhBnB,IAAAA,IAAI,EAAJA;AARgB,GAAX,CAAP;AAUD,CA3BM","sourcesContent":["import HTTPClient from 'axios'\n\nHTTPClient.defaults.headers['Content-Type'] = 'application/json'\n\nexport const getKongInfomation = adminURL =>\n  HTTPClient({\n    method: 'get',\n    baseURL: adminURL\n  })\n\nexport const retrieveConsumer = (adminURL, consumerId) =>\n  HTTPClient({\n    method: 'get',\n    baseURL: adminURL,\n    url: `/consumers/${consumerId}`\n  })\n\nexport const createConsumer = (adminURL, consumerId) =>\n  HTTPClient({\n    method: 'post',\n    baseURL: adminURL,\n    url: '/consumers',\n    data: {\n      username: consumerId\n    }\n  })\n\nexport const createOauthCredential = (\n  adminURL,\n  consumerId,\n  name,\n  redirect_uris\n) =>\n  HTTPClient({\n    method: 'post',\n    baseURL: adminURL,\n    url: `/consumers/${consumerId}/oauth2`,\n    data: {\n      name,\n      redirect_uris\n    }\n  })\n\nexport const getAccessToken = (baseURL, params, provisionKey) => {\n  const scope = params.scope.join(' ')\n  let data = {\n    grant_type: params.grantType,\n    scope,\n    authenticated_userid: params.authenticatedUserId,\n    provision_key: provisionKey\n  }\n  switch (params.grantType) {\n    case 'password': {\n      ;(data.username = params.username), (data.password = params.password)\n      break\n    }\n    case 'client_credentials': {\n      data.response_type = 'application/json'\n    }\n  }\n  return HTTPClient({\n    method: 'post',\n    baseURL,\n    url:'/user/oauth2/token',\n    auth: {\n      username: params.clientId,\n      password: params.clientSecret\n    },\n    data\n  })\n}\n"],"file":"connector.js"}