{"version":3,"sources":["../../src/helper/connector.js"],"names":["HTTPClient","defaults","headers","getKongInfomation","adminURL","method","baseURL","retrieveConsumer","consumer","url","name","createConsumer","data","username","deleteConsumer","createOauthCredential","params","consumerName","credentialName","redirect_uris","redirectURIs","getAccessToken","provisionKey","scope","join","grant_type","grantType","authenticated_userid","authenticatedUserId","provision_key","password","response_type","auth","clientId","clientSecret","refreshAccessToken","refresh_token","refreshToken"],"mappings":"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","sourcesContent":["import HTTPClient from 'axios'\n\nHTTPClient.defaults.headers['Content-Type'] = 'application/json'\n\nexport const getKongInfomation = adminURL =>\n  HTTPClient({\n    method: 'get',\n    baseURL: adminURL\n  })\n\nexport const retrieveConsumer = (adminURL, consumer) =>\n  HTTPClient({\n    method: 'get',\n    baseURL: adminURL,\n    url: `/consumers/${consumer.name}`\n  })\n\nexport const createConsumer = (adminURL, consumer) =>\n  HTTPClient({\n    method: 'post',\n    baseURL: adminURL,\n    url: '/consumers',\n    data: {\n      username: consumer.name\n    }\n  })\n\nexport const deleteConsumer = (adminURL, consumer) =>\n  HTTPClient({\n    method: 'delete',\n    baseURL: adminURL,\n    url: `/consumers/${consumer.name}`\n  })\n\nexport const createOauthCredential = (adminURL, params) =>\n  HTTPClient({\n    method: 'post',\n    baseURL: adminURL,\n    url: `/consumers/${params.consumerName}/oauth2`,\n    data: {\n      name: params.credentialName,\n      redirect_uris: params.redirectURIs\n    }\n  })\n\nexport const getAccessToken = (baseURL, params, provisionKey) => {\n  const scope = params.scope.join(' ')\n  let data = {\n    grant_type: params.grantType,\n    scope,\n    authenticated_userid: params.authenticatedUserId,\n    provision_key: provisionKey\n  }\n  switch (params.grantType) {\n    case 'password': {\n      ;(data.username = params.username), (data.password = params.password)\n      break\n    }\n    case 'client_credentials': {\n      data.response_type = 'application/json'\n    }\n  }\n  return HTTPClient({\n    method: 'post',\n    baseURL,\n    url: '/v2/external-user/oauth2/token',\n    auth: {\n      username: params.clientId,\n      password: params.clientSecret\n    },\n    data\n  })\n}\n\nexport const refreshAccessToken = (baseURL, params) =>\n  HTTPClient({\n    method: 'post',\n    baseURL,\n    url: '/v2/external-user/oauth2/token',\n    auth: {\n      username: params.clientId,\n      password: params.clientSecret\n    },\n    data: {\n      grant_type: 'refresh_token',\n      refresh_token: params.refreshToken\n    }\n  })\n"],"file":"connector.js"}